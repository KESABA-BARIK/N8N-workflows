{
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [360, 100],
      "id": "da476491-9091-45fd-8057-346b3769cd73",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "model": "mistralai/mistral-7b-instruct-v0.3",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [1000, 220],
      "id": "1e22d8db-590d-4b39-949e-0c0948d0d292",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "",
          "name": "YOUR_OPENROUTER_ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Based on the user data below, write a warm and informal re-engagement email in JSON.\n\nUser Info:\n- Name: {{ $json.firstname }}\n- Email: {{ $json.email }}\n\nConditions:\n- Mention that it's been 30 days of inactivity.\n- Include a discount or a new feature.\n- KEEP OUTPUT STRICTLY IN THIS JSON FORMAT (no extra text):\n\n{\n  \"email\": \"{{ $json.email }}\",\n  \"message\": \"<the email body>\"\n}\n",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are a helpful assistant. Only return valid JSON. Do not include markdown, code blocks, or natural language. No explanations.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [1020, 40],
      "id": "82dc3cf4-686f-4014-ab57-8e4ea04470df",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "sendTo": "={{ $json.output.email }}",
        "subject": "We miss you at AGILES!",
        "emailType": "text",
        "message": "={{ $json.output.message }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [1396, 100],
      "id": "4b7232f8-9245-48d1-ace8-6eb5b9412f42",
      "name": "Send a message",
      "webhookId": "",
      "credentials": {
        "gmailOAuth2": {
          "id": "",
          "name": "YOUR_GMAIL_ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "=https://api.hubapi.com/crm/v3/objects/contacts/{{ $('Code').item.json.id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"properties\": {\n    \"contacted_last\": \"{{ $('Code').item.json.lastmodifieddate }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1616, 100],
      "id": "e2c7fe0e-78fb-4d23-bea4-901cf589a31e",
      "name": "HTTP Request1",
      "credentials": {
        "oAuth2Api": {
          "id": "",
          "name": "YOUR_HUBSPOT_OAUTH"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.hubapi.com/crm/v3/objects/contacts/search",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "{\n  \"filterGroups\": [\n    {\n      \"filters\": [\n        {\n          \"propertyName\": \"lastmodifieddate\",\n          \"operator\": \"GT\",\n          \"value\": \"2024-06-08T00:00:00.000Z\"\n        }\n      ]\n    }\n  ],\n  \"properties\": [\"firstname\", \"lastname\", \"email\", \"lastmodifieddate\"],\n  \"limit\": 10\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [580, 100],
      "id": "9b1818de-5af7-450b-9852-e4d62fce0682",
      "name": "HTTP Request",
      "credentials": {
        "oAuth2Api": {
          "id": "",
          "name": "YOUR_HUBSPOT_OAUTH"
        },
        "httpBearerAuth": {
          "id": "",
          "name": "YOUR_HTTP_BEARER_AUTH"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const THIRTY_DAYS = 30 * 24 * 60 * 60 * 1000;\nconst now = new Date();\n\n// Extract the contacts list\nconst contacts = $input.first().json.results;\n\nreturn contacts\n  .map(contact => {\n    const lastModified = new Date(contact.properties.lastmodifieddate);\n    lastModified.setUTCHours(0, 0, 0, 0); // Set time to midnight\n    const contactedLast = lastModified.getTime();\n\n    return {\n      json: {\n        id: contact.id,\n        firstname: contact.properties.firstname,\n        email: contact.properties.email,\n        lastmodifieddate: contactedLast\n      }\n    };\n  })\n  .filter(item => {\n    return now.getTime() - item.json.lastmodifieddate < THIRTY_DAYS;\n  });\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [800, 100],
      "id": "6682d91d-5511-4317-8980-b59b941924f3",
      "name": "Code"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"email\": \"string\",\n  \"message\": \"string\"\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [1200, 220],
      "id": "2784e66d-3a32-4350-8d46-2137bffd2969",
      "name": "Structured Output Parser"
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [{ "node": "HTTP Request", "type": "main", "index": 0 }]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [{ "node": "AI Agent", "type": "ai_languageModel", "index": 0 }]
      ]
    },
    "AI Agent": {
      "main": [
        [{ "node": "Send a message", "type": "main", "index": 0 }]
      ]
    },
    "Send a message": {
      "main": [
        [{ "node": "HTTP Request1", "type": "main", "index": 0 }]
      ]
    },
    "HTTP Request": {
      "main": [
        [{ "node": "Code", "type": "main", "index": 0 }]
      ]
    },
    "Code": {
      "main": [
        [{ "node": "AI Agent", "type": "main", "index": 0 }]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [{ "node": "AI Agent", "type": "ai_outputParser", "index": 0 }]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": ""
  }
}
